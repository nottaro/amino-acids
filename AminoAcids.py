

#dictionary of while loop values
codon = {"UUU" : " ğŸ§¬PhenylalanineğŸ§¬", "CUU" : " ğŸ§¬LeucineğŸ§¬", "AUU" : " ğŸ§¬IsoleucineğŸ§¬", "GUU" : " ğŸ§¬ValineğŸ§¬",
          "UUC" : " ğŸ§¬PhenylalanineğŸ§¬", "CUC" : " ğŸ§¬LeucineğŸ§¬", "AUC" : " ğŸ§¬IsoleucineğŸ§¬", "GUC" : " ğŸ§¬ValineğŸ§¬",
          "UUA" : " ğŸ§¬LeucineğŸ§¬", "CUA" : " ğŸ§¬LeucineğŸ§¬", "AUA" : " ğŸ§¬IsoleucineğŸ§¬", "GUA" : " ğŸ§¬ValineğŸ§¬",
          "UUG" : " ğŸ§¬LeucineğŸ§¬", "CUG" : " ğŸ§¬LeucineğŸ§¬", "AUG" : " ğŸ§¬MethionineğŸ§¬", "GUG" : " ğŸ§¬ValineğŸ§¬",
          "UCU" : " ğŸ§¬SerineğŸ§¬", "CCU" : " ğŸ§¬ProlineğŸ§¬", "ACU" : " ğŸ§¬ThreonineğŸ§¬", "GCU" : " ğŸ§¬AlanineğŸ§¬",
          "UCC" : " ğŸ§¬SerineğŸ§¬", "CCC" : " ğŸ§¬ProlineğŸ§¬", "ACC" : " ğŸ§¬ThreonineğŸ§¬", "GCC" : " ğŸ§¬AlanineğŸ§¬",
          "UCA" : " ğŸ§¬SerineğŸ§¬", "CCA" : " ğŸ§¬ProlineğŸ§¬", "ACA" : " ğŸ§¬ThreonineğŸ§¬", "GCA" : " ğŸ§¬AlanineğŸ§¬",
          "UCG" : " ğŸ§¬SerineğŸ§¬", "CCG" : " ğŸ§¬ProlineğŸ§¬", "ACG" : " ğŸ§¬ThreonineğŸ§¬", "GCG" : " ğŸ§¬AlanineğŸ§¬",
          "UAU" : " ğŸ§¬IsoleucineğŸ§¬", "CAU" : " ğŸ§¬HistidineğŸ§¬", "AAU" : " ğŸ§¬AsparagineğŸ§¬", "GAU" : " ğŸ§¬Aspartic AcidğŸ§¬",
          "UAC" : " ğŸ§¬TyrosineğŸ§¬", "CAC" : " ğŸ§¬HistidineğŸ§¬", "AAC" : " ğŸ§¬AsparagineğŸ§¬", "GAC" : " ğŸ§¬Aspartic AcidğŸ§¬",
          "UAA" : " ğŸ§¬Stop CodonğŸ§¬", "CAA" : " ğŸ§¬GlutamineğŸ§¬", "AAA" : " ğŸ§¬LysineğŸ§¬", "GAA" : " ğŸ§¬Glutamic AcidğŸ§¬",
          "UAG" : " ğŸ§¬Stop CodonğŸ§¬", "CAG" : " ğŸ§¬GlutamineğŸ§¬", "AAG" : " ğŸ§¬LysineğŸ§¬", "GAG" : " ğŸ§¬Glutamic AcidğŸ§¬",
          "UGU" : " ğŸ§¬CysteineğŸ§¬", "CGU" : " ğŸ§¬ArginineğŸ§¬", "AGU" : " ğŸ§¬SerineğŸ§¬", "GGU" : " ğŸ§¬GlycineğŸ§¬",
          "UGC" : " ğŸ§¬CysteineğŸ§¬", "CGC" : " ğŸ§¬ArginineğŸ§¬", "AGC" : " ğŸ§¬SerineğŸ§¬", "GGC" : " ğŸ§¬GlycineğŸ§¬",
          "UGA" : " ğŸ§¬Stop CodonğŸ§¬", "CGA" : " ğŸ§¬ArginineğŸ§¬", "AGA" : " ğŸ§¬ArginineğŸ§¬", "GGA" : " ğŸ§¬GlycineğŸ§¬", "GGG" : " ğŸ§¬GlycineğŸ§¬"
          }

das = input('Please your ğŸ§¬DNAğŸ§¬ code in the letters A, G, C, T. Would you like to continue(Y/N)? ')
if das == 'Y':  


  loop1 = 0

  rna=""
  #replaces DNA with RNA letters
  while not loop1 == 1:
  #iterates over values
    loop1=0
    dna = input('What is your ğŸ§¬DNAğŸ§¬ code? ')
    dna = dna.upper()
    for i in range(0, len(dna)):
      if dna[i]=="T":
          rna=rna+"A"

      elif dna[i]=="G":
          rna=rna+"C"

      elif dna[i]=="A":
          rna=rna+"U"

      elif dna[i]=="C":
          rna=rna+"G"

      else:
        print("Error. Please ignore the following messages as they may be incorrect")
        loop1=2
        break
    if loop1==2:
      pass
    else:
      loop1=1

  print('Your ğŸ§¬DNAğŸ§¬ code is:', dna)
  print('The messenger ğŸ§¬RNAğŸ§¬ strand is: ', rna)
  a=0
  print("Your ğŸ§¬amino acidğŸ§¬ chain is:")
#divides string by 3, prints out corresponding amino acid
  for i in range(0, int(len(dna)/3)):
    print(codon[rna[a]+rna[a+1]+rna[a+2]])
    a=a+3
else: 
  print('Understood. Shutting down.')